name: Run test

on: [push, pull_request]

env:
  PYTHON_TARGETS: '3.11 3.12 3.13'

jobs:
  run-tests:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: ['3.11', '3.12', '3.13']
    runs-on: ${{ matrix.os }}
    env:
      PDM_LOCK_FORMAT: pylock
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: ${{ matrix.python }}
          cache: true
      - name: Setup rust
        uses: dtolnay/rust-toolchain@stable
      - name: Run pre-commit hooks
        uses: pre-commit/action@v3.0.1
      - name: Install project
        run: pdm install
      - name: Run unit tests
        run: pdm run pytest --cov python

  build-linux:
    runs-on: ubuntu-latest
    name: Build wheels linux (${{ matrix.target }})
    strategy:
      matrix:
        target:
          - x86_64
          - i686
          - aarch64
          - armv7
          - s390x
          - ppc64le
          - x86_64-unknown-linux-musl
          - i686-unknown-linux-musl
    steps:
    - uses: actions/checkout@v4
    - name: Build wheels
      if: ${{ matrix.target != 'x86_64' }}
      uses: PyO3/maturin-action@v1
      with:
        rust-toolchain: stable
        target: ${{ matrix.target }}
        manylinux: auto
        args: --release --out dist -i "${{ env.PYTHON_TARGETS }}"
    - name: Build wheels and sdist
      if: ${{ matrix.target == 'x86_64' }}
      uses: PyO3/maturin-action@v1
      with:
        rust-toolchain: stable
        target: ${{ matrix.target }}
        manylinux: auto
        args: --release --out dist --sdist -i "${{ env.PYTHON_TARGETS }}"

  build-macos:
    runs-on: macos-latest
    name: Build wheels macOS (${{ matrix.target }})
    strategy:
      matrix:
        target: [universal2-apple-darwin, x86_64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Build wheels - x86_64
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist -i "${{ env.PYTHON_TARGETS }}"

  build-windows:
    runs-on: windows-latest
    name: Build wheels Windows (${{ matrix.target }})
    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist -i "${{ env.PYTHON_TARGETS }}"
