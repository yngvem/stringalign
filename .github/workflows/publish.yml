name: Release

on:
  workflow_dispatch:
    inputs:
      bump-type:
        description: 'Bump type'
        required: true
        default: 'patch'
        type: choice
        options:
        - major
        - minor
        - patch

jobs:
  bump_version:
    environment: pypi
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.update_git.outputs.version }}
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set git config
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Bump version
        run: pipx run bump-my-version bump ${{ inputs.bump-type }}

      - name: Push to github
        run: git push && git push --tags

      - name: Create release
        id: update_git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export VERSION=$(pipx run toml-cli get --toml-path Cargo.toml package.version)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          gh release create "v$VERSION" \
              --repo="$GITHUB_REPOSITORY" \
              --title="Stringalign ${VERSION}" \
              --generate-notes

  build_wheels:
    needs: [bump_version]
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: 'v${{ needs.bump_version.outputs.version }}'

      - uses: pypa/cibuildwheel@v2.22.0
        env:
          CIBW_SKIP: '*-musllinux_i686'
          CIBW_BEFORE_BUILD: rustup show
          CIBW_BEFORE_BUILD_LINUX: >
            curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=stable --profile=minimal -y &&
            rustup show
          CIBW_ENVIRONMENT: 'PATH="$HOME/.cargo/bin:$PATH" CARGO_TERM_COLOR="always"'

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_sdist:
    needs: [bump_version]
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: 'v${{ needs.bump_version.outputs.version }}'

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write

    steps:
      - uses: actions/download-artifact@v4
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
